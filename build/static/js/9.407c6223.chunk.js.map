{"version":3,"file":"static/js/9.407c6223.chunk.js","mappings":"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","sources":["components/adminPanel/adminSide/adminSide.js","components/adminPanel/adminCatalog/adminCatalog.js","components/courusel/courusel.js","components/adminPanel/adminProducts/adminProductsList.js","components/uploadImages/uploadImages.js","components/adminPanel/catalogList/subCats.js","components/adminPanel/catalogList/catalogList.js","components/adminPanel/adminProducts/setsList.js","components/adminPanel/adminProducts/productAdd.js","components/adminPanel/adminProducts/adminProducts.js","components/adminPanel/adminPanel.js","components/errorLoading/errorLoading.js"],"sourcesContent":["\r\n// import { Spinner } from '../../spinner/spinner';\r\n\r\nimport './adminSide.scss';\r\n\r\nconst AdminSide=({uiData, loading, lang, contentChange})=>{\r\n    console.log(lang, uiData);\r\n    const loadBtns=()=>{\r\n        return(\r\n            <ul onClick={contentChange}>\r\n                <li className=\"admin-side_item\" data-target=\"start\">\r\n                    <div className=\"admin-side_item_btn\" data-target=\"start\">{uiData.btn_main[lang.name]}</div>\r\n                </li>\r\n                <li className=\"admin-side_item\" data-target=\"catalog\">\r\n                    <div className=\"admin-side_item_btn\" data-target=\"catalog\">{uiData.btn_catalog[lang.name]}</div>\r\n                </li>\r\n                <li className=\"admin-side_item\" data-target=\"mebel\" >\r\n                    <div className=\"admin-side_item_btn\" data-target=\"mebel\">{uiData.btn_mebel[lang.name]}</div>\r\n                </li>\r\n                <li className=\"admin-side_item\" data-target=\"banner\">\r\n                    <div className=\"admin-side_item_btn\" data-target=\"banner\">{uiData.btn_banner[lang.name]}</div>\r\n                </li>\r\n                <li className=\"admin-side_item\" data-target=\"collection\">\r\n                    <div className=\"admin-side_item_btn\" data-target=\"collection\">{uiData.btn_set[lang.name]}</div>\r\n                </li>\r\n                \r\n                <li className=\"admin-side_item\" data-target=\"ui\"  >\r\n                    <div className=\"admin-side_item_btn\" \r\n                          data-target=\"ui\"\r\n                          >{uiData.btn_addUI[lang.name]}</div>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n    const content=!loading && uiData? loadBtns():null;\r\n    return(\r\n        <div className=\"admin-side\">\r\n            {/* {loading?<Spinner/>:null} */}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminSide;","import { useRef, useState, useEffect } from 'react';\r\nimport useConnectServer from '../../../services/connect/connect';\r\nimport deleteImg from '/OpenServer/domains/catalog/src/images/icons/delete.png';\r\nimport { Spinner } from '../../spinner/spinner';\r\n\r\nimport './adminCatalog.scss';\r\n\r\nconst AdminCatalog=({lang,langs})=>{\r\n    let mainCatalog=useRef(),\r\n        subCatalog=useRef();\r\n    const [mainCatId, setMainCatId]=useState(null),\r\n          [subCatId, setSubCatId]=useState(null),\r\n          [activeAddCat, setActiveCat]=useState(null),\r\n          [activeAddSubCat, setActiveSubCat]=useState(null),\r\n          [mainCatList, setMainCatList]=useState([]),\r\n          [subCatList, setSubCatList]=useState([]),\r\n          [subTrigger, setSubTrigger]=useState(false);\r\n\r\n    const {loading, error, postData}=useConnectServer();\r\n    \r\n    useEffect(()=>{\r\n        loadCatalogs();\r\n                // eslint-disable-next-line\r\n    },[])\r\n\r\n    const loadCatalogs=(id=null)=>{\r\n        const request={\r\n            action:'read',\r\n        }\r\n        if (id){\r\n            request['id']=id;\r\n            setSubTrigger(true);\r\n        }\r\n        postData({catalog:request})\r\n                .then(data=>{\r\n                    updateCatList(id, data.Catalog);\r\n                })\r\n                .catch(e=>console.log('error read catalogs, ', e));\r\n    }\r\n    const updateCatList=(id, data)=>{\r\n        if (id){\r\n            setSubCatList(data);\r\n            setSubTrigger(false);\r\n        } else {\r\n            setMainCatList(data);\r\n        }\r\n    }    \r\n    const addCats=(type,id)=>{        \r\n        const request={langs:[]};\r\n        request.action='write';\r\n        langs.forEach(item => {\r\n            let langDescr={};\r\n            langDescr.id=item.id\r\n            langDescr.value=document.querySelector(`input[data-target=${type}-${item.name}]`).value;\r\n            request.langs.push(langDescr);\r\n            document.querySelector(`input[data-target=${type}-${item.name}]`).value='';\r\n        });\r\n        if (id){\r\n            request.id=id;\r\n            setSubTrigger(true);\r\n        }\r\n        postData({catalog:request})\r\n                .then(data=>{\r\n                    updateCatList(id, data.Catalog);\r\n                })\r\n                .catch (e=>{\r\n                    console.log('error add catalog: ', request, ' error: ', e);\r\n                    alert ('Error add to catalog, details in the console');\r\n                })\r\n        \r\n    }\r\n    const onDeleteCat=(e, target)=>{\r\n        const elem=e.target.parentElement.getAttribute(target),\r\n              request={\r\n                  action:'del',\r\n                  target: target==='data-mainid'? 'cat': 'subCat',\r\n                  id: elem\r\n              };\r\n        postData({catalog:request})\r\n                .then(data=>{\r\n                    updateCatList(target===\"data-subid\", data.Catalog);\r\n                })\r\n                .catch(e=>{\r\n                    console.log('error delete catalog: ', request, 'error: ', e);\r\n                    alert ('Error delete, details in the console');\r\n                });\r\n        \r\n    }\r\n    const setMainCatalog=(e, catalogElement)=>{        \r\n        if (e.target.getAttribute('data-subid')){\r\n            setSubCatId(e.target.getAttribute('data-subid'));            \r\n            // setMainCatId(e.target.getAttribute('data-mainid'));  \r\n        }else {\r\n                setSubCatId(null);\r\n                setActiveSubCat(false);\r\n                if (subCatalog.current) {subCatalog.current.classList.remove('active');}\r\n                setMainCatId(e.target.getAttribute('data-mainid'));\r\n                setSubCatList([]);\r\n                loadCatalogs(e.target.getAttribute('data-mainid'));                \r\n            }\r\n                \r\n        if (catalogElement.current){\r\n            catalogElement.current.classList.remove('active');\r\n        }\r\n        catalogElement.current=e.target;\r\n        catalogElement.current.classList.add('active');\r\n    }\r\n    const returnInputsName=(typeCatalog)=>{\r\n        const res=langs.map((item,i)=>{\r\n            return(\r\n                <input type=\"text\" className='addCat-input' data-lang={item.name} data-target={`${typeCatalog}-${item.name}`} placeholder={item.fullName} key={`${typeCatalog}-${item.name} ${i}`} />\r\n            )\r\n        })\r\n        return res;\r\n    }\r\n    const changeActive=(type)=>{\r\n        if (type==='main'){\r\n            setActiveCat(activeAddCat=>!activeAddCat);\r\n        }else{\r\n            setActiveSubCat(activeAddSubCat=>!activeAddSubCat);\r\n        }\r\n    }\r\n\r\n    const clasForSub=mainCatId? \"addCat right \":\"addCat right hide\",\r\n          clasForMain=activeAddCat? \"add-area \":\"add-area hide\",\r\n          clasForAddSub=activeAddSubCat && mainCatId? \"add-area \":\"add-area hide\";\r\n\r\n    const getMainList=(type)=>{\r\n        const res=mainCatList.map(item=>{\r\n            return (\r\n                <li key={`${type}${item.id}`}>\r\n                    <div className=\"item\"  data-mainid={item.id}>{item[lang.name]} <img src={deleteImg} alt=\"delete\" onClick={e=>onDeleteCat(e,'data-mainid')} /></div>\r\n                </li>\r\n            )\r\n        })\r\n        return res;\r\n    }\r\n    const getSubList=()=>{        \r\n        const res=subCatList.map(item=>{\r\n            return (\r\n                <li className=\"items-elem\" key={`sub${item.id}`}>\r\n                    <div className=\"item\" data-subid={item.id}>{item[lang.name]} <img src={deleteImg} alt=\"delete\" onClick={e=>onDeleteCat(e,'data-subid')}/></div>\r\n                </li>\r\n            )\r\n        })\r\n        return res;\r\n    }\r\n\r\n    return(\r\n        <div className=\"admin-catalog\">\r\n            <h4>Настройка каталога</h4>\r\n            <div className=\"admin-catalog-data\">\r\n                <div className=\"admin-catalog-data_right\">\r\n                    <h4>Основной каталог:</h4>\r\n                    <ul className=\"items\" onClick={e=>{setMainCatalog(e, mainCatalog)}}>\r\n                        {loading && !subTrigger ?<Spinner/>:getMainList('main')}\r\n                    </ul>\r\n                    <div className=\"addCat left\">\r\n                        <button className='addCat-btn'onClick={()=>changeActive('main')}>Add Catalog</button>\r\n                        <div className={clasForMain}>\r\n                            {returnInputsName('mainCatalog')}\r\n                            <button className='addCat-btn'onClick={()=>addCats('mainCatalog', null)} >Ok</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"admin-catalog-data_left\">\r\n                    <h4>Подкаталоги:</h4>\r\n                    <ul className=\"items\" onClick={e=>{setMainCatalog(e, subCatalog)}}>\r\n                        {subTrigger? <Spinner/> : getSubList()}\r\n                    </ul>\r\n                    <div className={clasForSub}>\r\n                        <button className='addCat-btn' onClick={()=>changeActive('sub')}>Add subCatalog</button>\r\n                        <div className={clasForAddSub}>\r\n                            {returnInputsName('subCatalog')}\r\n                            <button className='addCat-btn' onClick={()=>addCats('subCatalog', mainCatId)}>Ok</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminCatalog;","import Slider from \"react-slick\";\r\n\r\n// import \"/OpenServer/domains/\"; \r\n// import \"./courusel-theme.css\";\r\nimport \"./same.scss\";\r\n\r\nconst Courusel=({data})=>{\r\n    const element=()=>{\r\n        const elem=data.map((item,i)=>{\r\n            return (\r\n                <img src={item} alt=\"img-courusel\" key={`imgs${i}`}/>\r\n            )\r\n        })\r\n        return elem;\r\n    }\r\n    const settings = {\r\n        dots: true,\r\n\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      };\r\n    return(\r\n        \r\n            <div className=\"courusel\">\r\n                <Slider {...settings}>\r\n                {/* <div className=\"courusel-left\"> &lt;</div> */}\r\n                {element()}\r\n                {/* <div className=\"courusel-right\"> &gt;</div> */}\r\n                </Slider>\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Courusel;","import Courusel from \"../../courusel/courusel\";\r\nimport img1 from './temp_imgs/temp.jpg';\r\nimport delPic from '/OpenServer/domains/catalog/src/images/icons/delete.png';\r\nimport editPic from '/OpenServer/domains/catalog/src/images/icons/edit.png';\r\n\r\n\r\nconst AdminProductsList=({lang, data})=>{\r\n    // const imgs=(data)=>{\r\n    //     const res=data.map(elem=>{\r\n    //         return (\r\n    //             <>\r\n    //                 <img src={img1} alt={elem} className=\"products_img\" />\r\n    //             </>\r\n    //         )\r\n    //     })\r\n    //     return res;\r\n    // }\r\n    const content=()=>{\r\n        const res=data.map((item,i)=>{\r\n            return (\r\n                \r\n                <li key={`prod${item.id}-${i}`}>\r\n                    <div className=\"item\" data-proid={item.id} key={`prod${item.id}-${i}`}>\r\n                        <div className=\"description\">\r\n                            <h3>{item.name[lang.name]}</h3>\r\n                            <div>{item.descr[lang.name]}</div>\r\n                            <div><strong>$ {(Math.round(item.price*100)/100).toLocaleString('ru-RU')}</strong></div><br></br>\r\n                        </div>\r\n                        <div className=\"imgs\">\r\n                            {/* {imgs(item.imgs)} */}\r\n                            <Courusel data={[img1,img1,img1]}/>\r\n                        </div>\r\n                        <div className=\"pics\">\r\n                            <img src={editPic} alt=\"edit\" />\r\n                            <img src={delPic} alt=\"delete\" />\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                \r\n            )\r\n        })\r\n        return res;\r\n    }\r\n    return(\r\n        <>\r\n           {content()} \r\n        </>\r\n    )\r\n}\r\nexport default AdminProductsList;","import React, {useEffect, useState} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport useConnectServer from '../../services/connect/connect';\r\n\r\nimport './uploadImgs.scss';\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\n\r\nconst UploadImages=({getFiles})=> {\r\n  const [files, setFiles] = useState([]),\r\n        [formData, setFormData]=useState(null);\r\n\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: {\r\n      'image/*': []\r\n    },\r\n    onDrop: acceptedFiles => {\r\n      setFiles(acceptedFiles.map(file => \r\n            Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n          ));\r\n          const tempData=new FormData();\r\n      setFormData(()=>{        \r\n        acceptedFiles.forEach((file,i)=>{\r\n          tempData.append(file.name, file);\r\n        })\r\n        return tempData;\r\n      })\r\n\r\n    }\r\n  });\r\n  useEffect(()=>{\r\n    getFiles(files, formData);\r\n\r\n    // eslint-disable-next-line\r\n  }, [files, formData]);\r\n\r\n  const thumbs = files.map(file => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={img}\r\n          alt=\"\"\r\n          // Revoke data uri after image is loaded\r\n          onLoad={() => { URL.revokeObjectURL(file.preview) }}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\r\n    return () => files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"container-upload\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Перетащите сюда 1 или несколько изображений</p>\r\n      </div>\r\n      <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UploadImages;\r\n","\r\n\r\nconst SubsCat=({data, check})=>{\r\n    \r\n    \r\n    return(\r\n        <li key={`subs_${data.id}`}>\r\n            <div className=\"cats_sub_item\">\r\n                <label><input type=\"checkbox\" disabled={!check} subcatsid={data.id}/> {data.name}</label>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SubsCat;","import { useState } from \"react\";\r\nimport SubsCat from \"./subCats\";\r\n\r\n\r\n\r\nconst CatalogList=({data})=>{\r\n    const [check, setCheck]=useState(false);\r\n    \r\n    const checks=()=>{\r\n        setCheck(check=>!check);\r\n        \r\n    }\r\n    const subs=!data.items? null : data.items.map((item,i)=>{\r\n        return <SubsCat data={item} check={check} key={`subs_${i}`}/>\r\n    })\r\n    return(\r\n            <div className=\"admin_catalogs\">\r\n                <label><input type=\"checkbox\" \r\n                              checked={check} \r\n                              onChange={checks}\r\n                              catid={data.id}\r\n                              who='cats'/>\r\n                                {data.name} \r\n                </label>\r\n                <ul className=\"items admin_add_catalogs\">\r\n                    {subs}\r\n                </ul>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default CatalogList;","\r\nconst SetsList=({data})=>{\r\n    //console.log(data);\r\n\r\n    const list=!data?null:data.map(item=>{\r\n        //console.log(item);\r\n        return(\r\n            <li key={`sets_${item.id}`}>\r\n                <label><input type=\"checkbox\" style={{marginRight:\"5px\", width:\"auto\"}} setid={item.id}/> {item.name}</label>\r\n            </li>\r\n            \r\n        )\r\n    })\r\n    return(\r\n        <div className=\"admin_add_sets_list\">\r\n            <ul>\r\n                {list}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetsList;","import { useState, useRef } from \"react\";\r\nimport UploadImages from \"../../uploadImages/uploadImages\";\r\nimport useConnectServer from \"../../../services/connect/connect\";\r\nimport { Spinner } from \"../../spinner/spinner\";\r\nimport CatalogList from \"../catalogList/catalogList\";\r\nimport SetsList from \"./setsList\";\r\n\r\n\r\nimport './productAdd.scss';\r\n\r\nconst catalogs=[\r\n    {\r\n        name:'1',\r\n        id:1,\r\n        items:[\r\n            {\r\n                id:1,\r\n                name:'1-1'\r\n            },\r\n            {\r\n                id:2,\r\n                name:'1-2'\r\n            },\r\n            {\r\n                id:3,\r\n                name:'1-3'\r\n            }\r\n        ]\r\n    },    \r\n    {\r\n        name:'2',\r\n        id:2,\r\n        items:[\r\n            {\r\n                id:4,\r\n                name:'2-1'\r\n            },\r\n            {\r\n                id:5,\r\n                name:'2-2'\r\n            },\r\n            {\r\n                id:6,\r\n                name:'2-3'\r\n            }\r\n        ]\r\n    }\r\n],\r\n      sets=[\r\n        {\r\n            id:1,\r\n            name:'кухня'\r\n        },\r\n        {\r\n            id:2,\r\n            name:'Спальня'\r\n        },\r\n        {\r\n            id:3,\r\n            name:'Прихожая'\r\n        },\r\n        {\r\n            id:4,\r\n            name:'Гостинная'\r\n        },\r\n      ]\r\nconst ProductAdd=({langs})=>{\r\n    const [areaClass, setAreaClass]=useState(false),\r\n          [files, setFiles]=useState(null),\r\n          nameInput=useRef([]),\r\n          descrInput=useRef([]),\r\n          {postData, clearError, postFiles, loading, error}=useConnectServer();\r\n\r\n    const listLangsName=(type)=>{\r\n        if (type==='names'){\r\n            nameInput.current=[];\r\n        } else{ descrInput.current=[];}\r\n        const res=langs.map(item=>{            \r\n            const Elem=()=>{ \r\n                const [value, setValue]=useState('');\r\n                const onInput=(e)=>{\r\n                    setValue(e.target.value);\r\n                }\r\n                const setInputList=(input)=>{\r\n                    if (input){\r\n                        if (type==='names'){\r\n                            nameInput.current.push(input)\r\n                        } else{\r\n                            descrInput.current.push(input);\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n                return (\r\n                    type==='names'? \r\n                    <input  type=\"text\" \r\n                            key={`input${item.id}`} \r\n                            placeholder={item.fullName} \r\n                            data-name={item.id} \r\n                            value={value} \r\n                            onChange={onInput} \r\n                            ref={(input)=>setInputList(input)}/> :\r\n                    <textarea name={`descr-${item.name}`} \r\n                              key={`txtArea${item.id}`} \r\n                              placeholder={item.fullName} \r\n                              data-name={item.id} \r\n                              value={value} \r\n                              cols=\"30\" rows=\"10\"\r\n                              className=\"descr-txtArea\"\r\n                              onChange={onInput} \r\n                              ref={(input)=>setInputList(input)}>\r\n                    </textarea>\r\n                    // id={`descr-${item}`}\r\n                    )       \r\n                }\r\n            return Elem();\r\n        });\r\n        return res;\r\n    }\r\n    const showAddArea=areaClass?'add-area':'add-area add-area_hide';\r\n    const test=new FormData();\r\n    const names={}, descr={};\r\n    const submitForm=()=>{\r\n        nameInput.current.forEach(item=>{\r\n            names[item.getAttribute('data-name')]= item.getAttribute('value');\r\n        })\r\n        descrInput.current.forEach(item=>{\r\n            descr[item.getAttribute('data-name')]= item.textContent;\r\n        })\r\n        files.forEach((item,i)=>{ \r\n            test.append(`product_img${i}`, item);\r\n        })\r\n        clearError();\r\n        \r\n        const checksSets= getCheckSets(document.querySelector('.admin_add_sets_list').getElementsByTagName('input'));\r\n\r\n        const checksCats=getCheckCats(document.querySelector('.admin_add_catalogs').querySelectorAll('.cats_items'));\r\n        \r\n        // console.log(checksCats, checksSets);\r\n        // let data={\r\n        //         name:{...names},\r\n        //         descr:{...descr},\r\n        //         sets:checksSets.sets,\r\n        //         cats:checksCats.cats,\r\n        //         subCats:checksCats.subCats\r\n        // };\r\n        // console.log(data);\r\n        postData({parts:{data:{\r\n                    name:{...names},\r\n                    descr:{...descr},\r\n                    sets:checksSets.sets,\r\n                    cats:checksCats.cats,\r\n                    subCats:checksCats.subCats\r\n        }}})\r\n            .then(data=>{\r\n                console.log(data);\r\n                console.log(files.length);\r\n                const id=1;\r\n                if(files.length){\r\n                    postFiles(test,`http://ebel.lc/upload/${id}`)\r\n                            .then(data=>{console.log(data)})\r\n                            .catch(e=>console.log(`error request in add files: ${e}`));\r\n                }\r\n                \r\n            })\r\n            .catch(e=>console.log(`error request in add information: ${e}`))\r\n\r\n    }\r\n    const getFiles=(files, formData)=>{        \r\n        setFiles(files);\r\n    }\r\n    const ShowLoad=()=>{\r\n        return(\r\n            <div className=\"show-spiner\">\r\n                <Spinner/>\r\n            </div>\r\n        )\r\n    }\r\n    const catalogList=!catalogs?null:catalogs.map(item=>{\r\n        return (\r\n            <li key={`add_cats-${item.id}`}>\r\n               <div className=\"cats_items\">\r\n               <CatalogList data={item}/>\r\n               </div>\r\n            </li>\r\n        )\r\n    })\r\n    return(\r\n        <div className=\"product_add\">\r\n            <div className=\"label\" onClick={()=>setAreaClass(areaClass=>!areaClass)}>------Добавить------</div>\r\n            <div className=\"container\">\r\n                <div className={showAddArea}>\r\n                    {loading && !error ? <ShowLoad/> : null}\r\n                    <div className=\"des\">Заполните все поля ниже:</div> \r\n                    <div className=\"names\">Введите название:</div>                   \r\n                        {listLangsName('names')}\r\n                    <div className=\"names\">Введите описание:</div>\r\n                        {listLangsName('txtArea')}\r\n                    <div className=\"names\">Укажите каталоги и подкаталоги</div>\r\n                        <ul className=\"admin_add_catalogs\">\r\n                           {catalogList} \r\n                        </ul>\r\n                    <div className=\"names\">Укажите в какие коллекции входит товар:</div>\r\n                        <ul className=\"admin_add_sets\">\r\n                            <SetsList data={sets}/>\r\n                        </ul>\r\n                        <UploadImages getFiles={(files, formData)=>getFiles(files, formData)}/>\r\n                    <button onClick={submitForm}>Отправить</button>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getCheckCats(catsFind){\r\n    const checks={cats:[], subCats:[]};\r\n    catsFind.forEach(item=>{\r\n        \r\n        const elems=item.getElementsByTagName('ul');\r\n        if (item.querySelector(\"input[who='cats']\").checked){\r\n            checks.cats.push(item.querySelector(\"input[who='cats']\").getAttribute('catid'));\r\n            for (let i=0; i<elems[0].children.length; i++){\r\n                const elem=elems[0].children[i].querySelector('input');\r\n                if (elem.checked){\r\n                    checks.subCats.push(elem.getAttribute('subcatsid'));\r\n                }\r\n            }\r\n        }\r\n    })\r\n    return checks;\r\n}\r\nfunction getCheckSets(sets){\r\n    const checks={sets:[]};\r\n    for (let i=0;i<sets.length;i++){\r\n        if (sets[i].checked){\r\n            checks.sets.push(sets[i].getAttribute('setiD'))\r\n        }\r\n    }\r\n    return checks;\r\n}\r\n\r\nexport default ProductAdd;","import { useState } from \"react\";\r\nimport AdminProductsList from \"./adminProductsList\";\r\nimport ProductAdd from \"./productAdd\";\r\n\r\n\r\nimport './adminProducts.scss';\r\n\r\n\r\nconst AdminProducts=({lang, langs})=>{\r\n    const data=[\r\n        {id:1,\r\n        name:{\r\n            en:'Chair',\r\n            ru:'Стул',\r\n            kz:'Корпе'\r\n            },\r\n        set:2,\r\n        imgs:['/images/temp/temp.jpg', 'src/images/temp/temp2.jpg'],\r\n        descr:{\r\n            en:'Cool chair',\r\n            ru: 'Хороший деревянный стул',\r\n            kz: 'Жаксы екен корпе'\r\n            },\r\n        price: 200\r\n        },\r\n        {id:2,\r\n            name:{\r\n                en:'Table',\r\n                ru:'Стoл',\r\n                kz:'Корпе2'\r\n                },\r\n            set:2,\r\n            imgs:['src/images/temp/temp.jpg', 'src/images/temp/temp2.jpg'],\r\n            descr:{\r\n                en:'Cool table',\r\n                ru: 'Хороший деревянный стoл',\r\n                kz: 'Жаксы екен корпе'\r\n            },\r\n            price: 3500\r\n        }\r\n    ]\r\n    const [hideItems, setHideItems]=useState(true);\r\n\r\n    const changeHideItems=()=>{\r\n        setHideItems(hideItems=>!hideItems);\r\n    }\r\n    const classItems=hideItems? \"items items_hide\":'items ';\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <div className=\"products\">\r\n                <h3>Список товаров:</h3>\r\n                <div className=\"hide-show\" onClick={changeHideItems}>------Скрыть/ показать список------</div>\r\n                <div className={classItems}>\r\n                    <ul>\r\n                        <AdminProductsList lang={lang} data={data}/>\r\n                    </ul>\r\n                </div>\r\n                <ProductAdd langs={langs}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminProducts;","import { NavLink } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport useConnectServer from \"../../services/connect/connect\";\r\nimport ErrorLoading from \"../errorLoading/errorLoading\";\r\nimport { Spinner } from \"../spinner/spinner\";\r\nimport AdminSide from \"./adminSide/adminSide\";\r\nimport AddPage from \"../addPage/addPage\";\r\nimport AdminCatalog from \"./adminCatalog/adminCatalog\";\r\nimport AdminProducts from \"./adminProducts/adminProducts\";\r\n\r\nimport './adminPanel.scss';\r\n\r\nconst AdminPanel=(props)=>{\r\n    console.log(props);\r\n    const [lang, setLang]=useState('ru'),\r\n          [target, setTarget]=useState('start'),\r\n          {postData, clearError, error, loading}=useConnectServer(),\r\n          [uidata, setUIData]=useState(props.uiData ? props.uiData.GetUI: null),\r\n          {langs}=props;\r\n\r\n    useEffect(()=>{\r\n        setLang(lang=>props.lang);\r\n        console.log('change lang to: ', lang.name);\r\n         // eslint-disable-next-line\r\n    },[props.lang])\r\n\r\n    useEffect(()=>{\r\n        if (!props.uiData){\r\n            initUIdata();\r\n        }\r\n         // eslint-disable-next-line\r\n    },[])\r\n\r\n    const initUIdata=()=>{\r\n        clearError();\r\n        postData({getUI:''})\r\n                .then(data=>{ \r\n                    setUIData(data.GetUI);\r\n                })\r\n                .catch(e=>console.log('error get data from server: ',e));\r\n    }\r\n    const setContent=()=>{\r\n        switch (target){\r\n            case 'ui':\r\n                return (\r\n                    <div className=\"admin-container\">\r\n                        <AddPage lang={props.lang} langs={props.langs} uIData={props.uiData.GetUI}/>\r\n                    </div>\r\n                );\r\n            case 'catalog':\r\n                return (\r\n                    <div className=\"admin-container\">\r\n                        <AdminCatalog lang={lang} langs={langs}/>\r\n                    </div>\r\n                )\r\n            case 'start':\r\n                return <StartContent/>;\r\n            case 'mebel':\r\n                return <AdminProducts lang={lang} langs={langs}/>\r\n            default: return (<div className=\"admin-container\"> <h4>Ничего нет:)))</h4></div>);\r\n        }\r\n    }\r\n    const StartContent=()=>{\r\n        return (\r\n            <div className=\"admin-container\">\r\n                <h3>Админ панель!</h3>\r\n                <p>.........................</p>\r\n                <NavLink to=\"/\">Перейти на главную страницу  {uidata.button_send[lang.name]}</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n    const contentChange=(e)=>{\r\n        const target=e.target.getAttribute('data-target');\r\n        setTarget(target);\r\n    }\r\n    const errorContent=error?<ErrorLoading/>:null,\r\n          loadinContet=loading && !error?<Spinner/>:null,\r\n          content=!loading && !error && uidata ? setContent():null;\r\n    return(\r\n        <div className=\"admin-panel\">\r\n           {loading? null: <AdminSide uiData={uidata} loading={loading} lang={lang} contentChange={contentChange}/>}\r\n           {errorContent}\r\n           {loadinContet}\r\n           {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPanel;","\r\nconst ErrorLoading=()=>{\r\n\r\n    return(\r\n        <div className=\"error-loading\">\r\n            <h2>OOPS!!!</h2>\r\n            <h5>что-то пошло не так :(</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorLoading;"],"names":["uiData","loading","lang","contentChange","console","log","content","onClick","className","btn_main","name","btn_catalog","btn_mebel","btn_banner","btn_set","btn_addUI","langs","mainCatalog","useRef","subCatalog","useState","mainCatId","setMainCatId","setSubCatId","activeAddCat","setActiveCat","activeAddSubCat","setActiveSubCat","mainCatList","setMainCatList","subCatList","setSubCatList","subTrigger","setSubTrigger","useConnectServer","postData","error","useEffect","loadCatalogs","type","id","request","action","catalog","then","data","updateCatList","Catalog","catch","e","addCats","forEach","item","langDescr","value","document","querySelector","push","alert","onDeleteCat","target","elem","parentElement","getAttribute","setMainCatalog","catalogElement","current","classList","remove","add","returnInputsName","typeCatalog","map","i","placeholder","fullName","changeActive","clasForSub","clasForMain","clasForAddSub","src","deleteImg","alt","dots","infinite","speed","slidesToShow","slidesToScroll","descr","Math","round","price","toLocaleString","img1","delPic","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","getFiles","files","setFiles","formData","setFormData","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","tempData","FormData","append","getRootProps","getInputProps","thumbs","style","onLoad","revokeObjectURL","check","disabled","subcatsid","setCheck","subs","items","checked","onChange","catid","who","list","setid","catalogs","sets","areaClass","setAreaClass","nameInput","descrInput","clearError","postFiles","listLangsName","setValue","onInput","setInputList","input","ref","cols","rows","Elem","showAddArea","test","names","ShowLoad","catalogList","textContent","checksSets","checks","length","getCheckSets","getElementsByTagName","checksCats","catsFind","cats","subCats","elems","children","getCheckCats","querySelectorAll","parts","hideItems","setHideItems","classItems","en","ru","kz","set","imgs","props","setLang","setTarget","GetUI","uidata","setUIData","initUIdata","getUI","StartContent","to","button_send","errorContent","loadinContet","uIData","setContent"],"sourceRoot":""}